apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: your-pipeline-name
spec:
  workspaces:
    - name: pipeline-workspace  # Define the workspace here
  tasks:
    - name: clone
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: git-clone
      params:
        - name: url
          value: "https://github.com/AkasbiYasser/devops-capstone-project.git"
        - name: branch
          value: "main"

    - name: lint
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: flake8
      params:
        - name: image
          value: "python:3.9-slim"
        - name: args
          value: ["--count", "--max-complexity=10", "--max-line-length=127", "--statistics"]
      runAfter:
        - clone

    - name: tests
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: nose
      params:
        - name: database_uri
          value: "sqlite:///test.db"
        - name: args
          value: "-v --with-spec --spec-color"
      runAfter:
        - clone

    - name: build
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: your-build-task  # Replace with your actual build task name
      params:
        # Add any necessary parameters for the build task here

    - name: deploy
      workspaces:
        - name: manifest-dir
          workspace: pipeline-workspace
      taskRef:
        name: openshift-client
        kind: ClusterTask
      params:
        - name: SCRIPT
          value: |
            echo "Updating manifest..."
            sed -i "s|IMAGE_NAME_HERE|$(params.build-image)|g" deploy/deployment.yaml
            cat deploy/deployment.yaml
            echo "Deploying to OpenShift..."
            oc apply -f deploy/
            oc get pods -l app=accounts
      runAfter:
        - build

    # Add more tasks here if needed
